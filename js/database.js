// Generated by CoffeeScript 1.3.3
var DB;

DB = {
  init: function() {
    var badge, options, version;
    badge = {
      value: 0,
      type: 'membersEpisodes'
    };
    options = {
      nbr_episodes_per_serie: 5,
      badge_notification_type: 'watched',
      dl_srt_language: 'VF',
      display_global: false,
      enable_ratings: false,
      max_height: 200,
      display_mean_note: true,
      menu_order: [
        {
          name: 'timelineFriends',
          img_path: '../img/timeline.png'
        }, {
          name: 'planningMember',
          img_path: '../img/planning.png'
        }, {
          name: 'membersEpisodes',
          img_path: '../img/episodes.png'
        }, {
          name: 'membersShows',
          img_path: '../img/episodes.png'
        }, {
          name: 'membersInfos',
          img_path: '../img/infos.png',
          img_style: 'margin-right: 9px;'
        }, {
          name: 'membersNotifications',
          img_path: '../img/notifications2.png'
        }, {
          name: 'searchShow',
          img_path: '../img/search.png'
        }, {
          name: 'searchMember',
          img_path: '../img/search.png'
        }, {
          name: 'blog',
          img_path: '../img/blog.png'
        }, {
          name: 'options',
          img_path: '../img/options.png'
        }, {
          name: 'logout',
          img_path: '../img/close.png'
        }
      ]
    };
    this.set('badge', badge, true);
    this.set('historic', [], false);
    this.set('options', options, true);
    this.set('views', {}, true);
    version = this.get('version', null);
    if (version === null) {
      return this.set('version', Fx.getVersion(), true);
    }
  },
  get: function(field, defaultValue) {
    if ((localStorage[field] != null) && localStorage[field] !== 'undefined') {
      return JSON.parse(localStorage[field]);
    } else {
      return defaultValue;
    }
  },
  set: function(field, value, init) {
    if (!init || (init && !localStorage[field])) {
      return localStorage[field] = JSON.stringify(value);
    }
  },
  remove: function(field) {
    return localStorage.removeItem(field);
  },
  removeAll: function() {
    return localStorage.clear();
  }
};
