// Generated by CoffeeScript 1.3.3
var View_MemberNotifications;

View_MemberNotifications = (function() {

  function View_MemberNotifications() {}

  View_MemberNotifications.prototype.init = function() {
    var _ref;
    this.id = 'MemberNotifications';
    this.name = 'MemberNotifications';
    this.url = '/members/notifications';
    this.root = 'notifications';
    return this.login = (_ref = DB.get('session')) != null ? _ref.login : void 0;
  };

  View_MemberNotifications.prototype.update = function(data) {
    var n, new_notifs, old_notifs;
    old_notifs = DB.get('member.' + this.login + '.notifs', []);
    new_notifs = Fx.formatNotifications(data);
    n = Fx.concatNotifications(old_notifs, new_notifs);
    n = Fx.sortNotifications(n);
    return DB.set('member.' + this.login + '.notifs', n);
  };

  View_MemberNotifications.prototype.content = function() {
    var currDate, data, n, nbrNotifications, newDate, output, time, _i, _len;
    output = '';
    nbrNotifications = 0;
    currDate = '';
    data = DB.get('member.' + this.login + '.notifs', null);
    if (!data) {
      return Fx.needUpdate();
    }
    time = Math.floor(new Date().getTime() / 1000);
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      n = data[_i];
      if (time < n.date) {
        continue;
      }
      newDate = date('D d F', n.date);
      if (newDate !== currDate) {
        currDate = newDate;
        output += '<div class="showtitle">' + currDate + '</div>';
      }
      output += '<div class="event ' + date('D', n.date).toLowerCase() + '">';
      if (!n.seen) {
        output += '<span class="new">' + __('new') + '</span> ';
      }
      output += n.html;
      output += '</div>';
      n.seen = true;
      nbrNotifications++;
    }
    DB.set('member.' + this.login + '.notifs', data);
    $('.notif').html(0).hide();
    Badge.set('new_notifications', 0);
    if (nbrNotifications === 0) {
      output += __('no_notifications');
    }
    return output;
  };

  return View_MemberNotifications;

})();
