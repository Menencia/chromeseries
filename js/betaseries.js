// Generated by CoffeeScript 1.7.1

/**
 * Betaseries class
 * @param {Object} Ajax
 * @param {Object} db
 */
var Betaseries;

Betaseries = (function() {
  function Betaseries(Ajax, db) {
    this.Ajax = Ajax;
    this.db = db;
    this.force = false;
  }


  /**
   * Display OR update a view
   */

  Betaseries.prototype.call = function() {
    var checks, reliable, today;
    checks = this.db.get('checks', {});
    today = new Date().toDateString();
    reliable = _.has(checks, this.view.store) && checks[this.view.store] === today;
    if (reliable && !this.force) {
      if (this.view.fetch) {
        return this.view.fetch();
      }
    } else {
      this.force = false;
      return this.Ajax[this.view.type](this.view.path, this.view.params, (function(_this) {
        return function(data) {
          checks[_this.view.store] = today;
          _this.db.set('checks', checks);
          data = data[_this.view.node];
          if (_this.view.update) {
            _this.view.update(data);
          }
          if (_this.view.fetch) {
            return _this.view.fetch();
          }
        };
      })(this));
    }
  };


  /**
   * Load a view
   * @param  {String}   view
   * @param  {Object}   params
   * @param  {Function} callback
   */

  Betaseries.prototype.load = function(view, params, callback) {
    this.view = new window[view](this.db, params, callback);
    return this.call();
  };


  /**
   * Refresh a view
   */

  Betaseries.prototype.refresh = function() {
    this.force = true;
    return this.call();
  };


  /**
   * Save view data in store
   * @param  {Object} data
   */

  Betaseries.prototype.save = function(data) {
    var store;
    store = this.db.store(this.path);
    return store.set(data);
  };

  return Betaseries;

})();
