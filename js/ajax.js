// Generated by CoffeeScript 1.3.3
var ajax, bgPage, extraInfoSpec, handler, requestFilter;

bgPage = chrome.extension.getBackgroundPage();

ajax = {
  url_api: "https://api.betaseries.com",
  site_url: "https://www.betaseries.com",
  key: "6db16a6ffab9",
  post: function(category, params, successCallback, errorCallback) {
    var member, token;
    if (params == null) {
      params = '';
    }
    member = DB.get('session', {});
    token = member.token === null ? '' : "&token=" + member.token;
    $('#sync img').attr('src', '../img/sync.gif');
    return $.ajax({
      type: "POST",
      url: this.url_api + category + ".json",
      data: "key=" + this.key + params + token,
      dataType: "json",
      success: function(data) {
        $('#sync img').attr('src', '../img/sync.png');
        if (successCallback != null) {
          return successCallback(data);
        }
      },
      error: function() {
        $('#sync img').attr('src', '../img/sync.png');
        if (errorCallback != null) {
          return errorCallback();
        }
      }
    });
  }
};

requestFilter = {
  urls: ["<all_urls>"]
};

extraInfoSpec = ['requestHeaders'];

handler = function(details) {
  var blockingResponse, headers, i, j;
  headers = details.requestHeaders;
  blockingResponse = {};
  for (i in headers) {
    j = headers[i];
    if (headers[i].name === 'User-Agent') {
      headers[i].value = 'chromeseries-' + Fx.getVersion();
      break;
    }
  }
  blockingResponse.requestHeaders = headers;
  return blockingResponse;
};

chrome.webRequest.onBeforeSendHeaders.addListener(handler, requestFilter, extraInfoSpec);
