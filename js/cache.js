// Generated by CoffeeScript 1.3.3
var Cache,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Cache = {
  force: function(view) {
    var views;
    views = DB.get('views', {});
    if (views[view] != null) {
      views[view].force = true;
      return DB.set('views', views);
    }
  },
  getSize: function() {
    var count, i, j, list, storage;
    count = 0;
    list = ['options', 'version', 'session', 'badge', 'historic'];
    storage = DB.getAll();
    for (i in storage) {
      j = storage[i];
      if (__indexOf.call(list, i) < 0) {
        count += DB.size(i);
      }
    }
    return count;
  },
  maintenance: function() {
    var cache, time;
    time = Math.floor(new Date().getTime() / 1000);
    cache = DB.get('cache', time);
    if (time - cache > 1 * 24 * 3600) {
      this.remove();
      return message('<img src="../img/inaccurate.png" /> Le cache de l\'extension a été vidé.');
    }
  },
  remove: function() {
    var i, j, storage, todelete, _i, _len;
    todelete = [];
    storage = DB.getAll();
    for (i in storage) {
      j = storage[i];
      if (i.indexOf('badge') !== 0 && i.indexOf('historic') !== 0 && i.indexOf('member' + DB.get('session').login + '.notifs') !== 0 && i.indexOf('options') !== 0 && i.indexOf('session') !== 0 && i.indexOf('version') !== 0 && i.indexOf('new_episodes_checked') !== 0) {
        todelete.push(i);
      }
    }
    for (_i = 0, _len = todelete.length; _i < _len; _i++) {
      i = todelete[_i];
      DB.remove(i);
    }
    return true;
  }
};
