// Generated by CoffeeScript 1.3.3

$(document).ready(function() {
  var menu, menu_order, options, selected, __, _i, _len;
  __ = function(msgname) {
    return chrome.i18n.getMessage(msgname);
  };
  options = DB.get('options');
  $('.link_general').text(__('general'));
  $('.link_facebook').text(__('facebook'));
  $('.link_about').text(__('about'));
  $('#title_badge').text(__('badge'));
  $('#title_view_episodes_not_seen').text(__('view_episodes_not_seen'));
  $('#dl_srt_language').text(__("dl_srt_language"));
  $('#nbr_episodes_per_serie').text(__("nbr_episodes_per_serie"));
  $('.max_height span').text(__("max_height"));
  $('.max_height input').attr('value', options.max_height + '');
  $('.nbr_episodes_per_serie span').text(__("nbr_episodes_per_serie"));
  $('.nbr_episodes_per_serie input').attr('value', options.nbr_episodes_per_serie + '');
  $('.text input').keyup(function() {
    var attr, value;
    attr = $(this).attr('name');
    value = $(this).attr('value');
    options[attr] = value;
    return DB.set('options', options);
  });
  $('.watched span').text(__('episodes_not_seen'));
  $('.watched input').attr('checked', 'watched' === options.badge_notification_type);
  $('.downloaded span').text(__('episodes_not_dl'));
  $('.downloaded input').attr('checked', 'downloaded' === options.badge_notification_type);
  $('.vf span').text(__('vf'));
  $('.vf input').attr('checked', 'VF' === options.dl_srt_language);
  $('.vo span').text(__('vo'));
  $('.vo input').attr('checked', 'VO' === options.dl_srt_language);
  $('.all span').text(__('all'));
  $('.all input').attr('checked', 'ALL' === options.dl_srt_language);
  $('.radio input').click(function() {
    var attr, value;
    attr = $(this).attr('name');
    value = $(this).attr('value');
    options[attr] = value;
    return DB.set('options', options);
  });
  $('#display_global label span').text(__("display_global"));
  $('#display_global label input').attr('checked', options.display_global);
  $('#enable_ratings label span').text(__("enable_ratings"));
  $('#enable_ratings label input').attr('checked', DB.get('options').enable_ratings);
  $('#display_mean_note label span').text(__("display_mean_note"));
  $('#display_mean_note label input').attr('checked', DB.get('options').display_mean_note);
  $('#display_copy_episode label span').text(__("display_copy_episode"));
  $('#display_copy_episode label input').attr('checked', DB.get('options').display_copy_episode);
  $('#display_notifications_icon label span').text(__("display_notifications_icon"));
  $('#display_notifications_icon label input').attr('checked', DB.get('options').display_notifications_icon);
  $('#mark_notifs_episode_as_seen label span').text(__("mark_notifs_episode_as_seen"));
  $('#mark_notifs_episode_as_seen label input').attr('checked', DB.get('options').mark_notifs_episode_as_seen);
  $('p label input').click(function() {
    var attr, checked;
    attr = $(this).parent().parent().attr('id');
    checked = $(this).is(':checked');
    options[attr] = checked;
    return DB.set('options', options);
  });
  $('#title_view_menu').text(__("title_view_menu"));
  $('#order_sections').text(__("order_sections"));
  $('#title_author').text(__('author'));
  $('#title_contributors').text(__('contributors'));
  $('#title_ext_page').text(__('extension_page'));
  $('#title_git_page').text(__('github_page'));
  $('#title_suggestions').text(__('suggestions_or_bugs'));
  $('select[name=dl_srt_language]').val(DB.get('options').dl_srt_language);
  $('input[name=nbr_episodes_per_serie]').attr('value', DB.get('options').nbr_episodes_per_serie);
  $('input[name=max_height]').attr('value', DB.get('options').max_height);
  menu_order = DB.get('options').menu_order;
  for (_i = 0, _len = menu_order.length; _i < _len; _i++) {
    menu = menu_order[_i];
    selected = menu.visible ? 'checked="checked" ' : '';
    $('#sections').append('<span id="' + menu.name + '">' + '<input type="checkbox" ' + selected + '/>' + '<img src="../img/grippy.png" /> ' + __('menu_' + menu.name) + '</span>');
  }
  $('option[value=VO]').text(__('vo'));
  $('option[value=VF]').text(__('vf'));
  $('option[value=ALL]').text(__('all'));
  $('option[value=true]').text(__('yes'));
  $('option[value=false]').text(__('no'));
  $("#sections").dragsort({
    dragSelector: "img",
    dragEnd: function() {},
    dragBetween: false,
    placeHolderTemplate: false
  });
  $('#sections img').removeAttr('style');
  $('#save_options_____').click(function() {
    var i, visible, _j, _len1;
    for (_j = 0, _len1 = menu_order.length; _j < _len1; _j++) {
      i = menu_order[_j];
      visible = $('#sections #' + i.name).find('input').is(':checked');
      i.visible = visible;
    }
    menu_order.sort(function(a, b) {
      if ($('#sections #' + a.name).index() < $('#sections #' + b.name).index()) {
        return -1;
      }
      if ($('#sections #' + a.name).index() > $('#sections #' + b.name).index()) {
        return 1;
      }
      return 0;
    });
    options = {
      badge_notification_type: $('select[name=badge_notification_type] :selected').val(),
      dl_srt_language: $('select[name=dl_srt_language] :selected').val(),
      nbr_episodes_per_serie: parseInt($('input[name=nbr_episodes_per_serie]').attr('value')),
      display_global: $('select[name=display_global] :selected').val() === 'true',
      enable_ratings: $('select[name=enable_ratings] :selected').val() === 'true',
      max_height: parseInt($('input[name=max_height]').attr('value')),
      display_mean_note: $('select[name=display_mean_note] :selected').val() === 'true',
      display_copy_episode: $('select[name=display_copy_episode] :selected').val() === 'true',
      display_notifications_icon: $('select[name=display_notifications_icon] :selected').val() === 'true',
      mark_notifs_episode_as_seen: $('select[name=mark_notifs_episode_as_seen] :selected').val() === 'true',
      menu_order: menu_order
    };
    DB.set('options', options);
    Badge.update();
    $(this).html(__('saved'));
    $(this).css('background-color', '#eafedf');
    return $('#save_options').css('color', '#999');
  });
  $('.menu a').click(function(ev) {
    var currentView;
    ev.preventDefault();
    selected = 'selected';
    $('.mainview > *').removeClass(selected);
    $('.menu li').removeClass(selected);
    setTimeout((function() {
      return $('.mainview > *:not(.selected)').css('display', 'none');
    }), 100);
    $(ev.currentTarget).parent().addClass(selected);
    currentView = $($(ev.currentTarget).attr('href'));
    currentView.css('display', 'block');
    setTimeout((function() {
      return currentView.addClass(selected);
    }), 0);
    return setTimeout((function() {
      return $('body')[0].scrollTop = 0;
    }), 200);
  });
  return $('.mainview > *:not(.selected)').css('display', 'none');
});
