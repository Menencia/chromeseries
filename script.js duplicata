$(document).ready(function(){
	
	var bgPage = chrome.extension.getBackgroundPage();
	
	/**
	 * Marquer l'épisode comme vu
	 */
	$('.watched').livequery('click', function() { 
		loading_start();
		var show = $(this).attr('show');
		var episode = $(this).attr('episode');
		var season = parseFloat(""+episode[1]+episode[2]);
		var number = parseFloat(""+episode[4]+episode[5]);
		var params = "&token="+localStorage.token+"&season="+season+"&episode="+number;
		bgPage.send("/members/watched/"+show, params, function (data) {
			loading_end();
			update('episodes');
		});
	});
	
	/**
	 * Marquer l'épisode comme téléchargé ou plus
	 */
	$('.downloaded').livequery('click', function() { 
		loading_start();
		var show = $(this).attr('show');
		var episode = $(this).attr('episode');
		var season = parseFloat(""+episode[1]+episode[2]);
		var number = parseFloat(""+episode[4]+episode[5]);
		var params = "&token="+localStorage.token+"&season="+season+"&episode="+number;
		bgPage.send("/members/downloaded/"+show, params, function (data) {
			loading_end();
			update('episodes');
		});
		return false;
	});
	
	/**
	 * Ouvrir un onglet
	 */
	var openTab = function(url, selected) {
		chrome.tabs.create({"url": url, "selected": selected});
	}
	
	// Effets de souris Over & Out
	$('.watched').livequery(function(){ 
		$(this).hover(function() { 
				$(this).css('cursor','pointer');
				$(this).attr('src', 'img/plot_green.gif');
				var node = $(this).parent().parent().prev();
				console.log(node);
				while(node.attr('class')!='serie'){
					node.find('.watched').attr('src', 'img/plot_green.gif');
					node = node.prev();
				}
			}, function() { 
				$(this).css('cursor','auto');
				$(this).attr('src', 'img/plot_red.gif');
				var node = $(this).parent().parent().prev();
				while(node.attr('class')!='serie'){
					node.find('.watched').attr('src', 'img/plot_red.gif');
					node = node.prev();
				}
			}
		); 
	}, function() { 
		$(this).unbind('mouseover').unbind('mouseout'); 
	}); 
	
	/*function downloadedOver(link, downloaded) {
		if (downloaded) {link.src = 'img/folder_delete.png';}
		else {}
	}
	function downloadedOut(link, downloaded) {
		if (downloaded) {link.src = 'img/folder.png';}
		else {}
	}*/
	
	/*$('.showTR').click(function(){
		$(this).parent().parent()
	});*/
	
	/**
	 * Mets à jour et affiche le contenu
	 * Contenus : episodes, infos
	 */
	var update = function(category) {
		loading_start();
		if (category == 'episodes') {
			var params = "&token="+localStorage.token;
			bgPage.send("/members/episodes/all", params, function (data) {
				var episodes = data.root.episodes;
				var show = "";
				var output = "<table>";
				var j = 0;
				var pos = 0;
				var MAX_EPISODES = 2;
				for (var n in episodes) {
					// Titre de la série
					if (episodes[n].show != show) {
						if (pos>MAX_EPISODES) {
							var texte;
							if (pos==MAX_EPISODES+1) texte = "Voir l'épisode suivant";
							else if (pos>MAX_EPISODES+1) texte = "Voir les "+(pos-MAX_EPISODES)+" épisodes suivants";
							output += '<tr class="plus"><td colspan="2"><img src="img/downarrow.gif" /> <a href="" class="showTR">'+texte+'</a></td></tr>';
						}
						show = episodes[n].show;
						output += '<tr class="serie" id="'+episodes[n].url+'"><td colspan="2">'+episodes[n].show+"</td></tr>";
						pos = 0;
					}
					pos++;
					var displayTR = (pos>MAX_EPISODES) ? 'style="display:none;"': "";
					var date = Math.floor(new Date().getTime() /1000);
					var jours = Math.floor(date/(24*3600));
					var date_0 = (24*3600)*jours-3600;
					var newShow = (episodes[n].date >= date_0);
					var class = (newShow) ? " new_show": "";
					output += '<tr class="show'+class+'" '+displayTR+'>';
					
					// Titre de l'épisode
					//output += '<td><a href="" title="Marquer comme vu" onClick="membersWatched(\''+episodes[n].url+'\', \''+episodes[n].episode+'\'); return false;" onMouseOut="markAsOut(this.firstChild, \''+links+'\')" onMouseOver="markAsOver(this.firstChild, \''+links+'\')">';
					output += '<td><img src="img/plot_red.gif" class="watched" show="'+episodes[n].url+'" episode="'+episodes[n].episode+'" /> ';
					output += '<span class="episode">['+episodes[n].episode+"]</span> ";
					output += episodes[n].title+' ';
					if (newShow) output += '<span class="new">NEW</span>';
					output += '</td>';
					
					// Actions
					var subs = episodes[n].subs;
					var nbSubs = 0; 
					var url = "";
					var quality = -1;
					for (var sub in subs) {
						if (subs[sub]['language'] == "VF" && subs[sub]['quality'] > quality) { 
							quality = subs[sub]['quality'];
							url = subs[sub]['url'];
						}
						nbSubs++;
					}
					output += '<td>';
					var downloaded = (episodes[n].downloaded == 1);
					var imgDownloaded;
					if (downloaded) {imgDownloaded = "folder"; titleDownloaded = "Marquer comme non-téléchargé"}
					else {imgDownloaded = "folder_add"; titleDownloaded = "Marquer comme téléchargé";}
					output += '<img src="img/'+imgDownloaded+'.png" class="downloaded" show="'+episodes[n].url+'" episode="'+episodes[n].episode+'" /> ';
					if (quality > -1) output += '<a href="" onClick="openTab(\''+url+'\', false); return false;" title="Qualité SRT VF : '+quality+'/5"><img src="img/srt.png" /></a>';
					output += '</td></tr>';
					j += 1;
				}
				output += "</table>";
				chrome.browserAction.setBadgeText({text: ""+j});
				chrome.browserAction.setBadgeBackgroundColor({color: [150, 0, 0, 255]});
				hide_contents();
				$('#'+category).show().html(output);
				loading_end();
			});
		}
		if (category == 'infos') {
			if (bgPage.connected() == false) {
				output = "";
				output += '<table><tr>';
				output += '<td>Login:</td>';
				output += '<td><input type="text" name="login" id="login" /></td>';
				output += '</tr><tr>';
				output += '<td>Password:</td>';
				output += '<td><input type="password" name="password" id="password" /></td>';
				output += '</tr></table>';
				output += '<div class="valid">';
				output += '<button onClick="login(); return false;">Valider</button>';
				output += '</div>';
				hide_contents();
				$('#'+category).show().html(output);
				loading_end();
			}
			else {
				var params = "&token="+localStorage.token;
				bgPage.send("/members/infos/"+localStorage.login, params, function (data) {
					var member = data.root.member;
					output = "<table><tr>";
					output += '<td><img src="'+member.avatar+'" width="50" /></td>';
					output += '<td>'+member.login+' (<a href="" onClick="logout(); return false;">déconnexion</a>)<br />';
					output += member.stats.badges+" badges, "+member.stats.shows+" séries<br />";
					output += member.stats.seasons+" saisons, "+member.stats.episodes+" épisodes<br />";
					output += "Avancement : "+member.stats.progress+"<br />";
					output += '</td></tr></table>';
					hide_contents();
					$('#'+category).show().html(output);
					loading_end();
				});
			}
		}
	}
	
	/**
	 * Cacher les contenus
	 */
	var hide_contents = function() {
		$('#episodes').hide();
		$('#infos').hide();
	}

	/**
	 * Connexion
	 */
	var login = function() {
		var login = document.getElementById('login').value;
		var password = calcMD5(document.getElementById('password').value);
		var params = "&login="+login+"&password="+password;
		loading_start();
		bgPage.send("/members/auth", params, function (data) {
			if (data.root.member != undefined) {
				token = data.root.member.token;
				localStorage.login = login;
				localStorage.token = data.root.member.token;
				menu('show');
				loading_end();
				update('episodes');
			}
			else {
				document.getElementById('password').value = "";
				message('Impossible de se connecter!');
				loading_end();	
			}
		});
	}
	
	/**
	 * Déconnexion
	 */
	var logout = function() {
		var params = "&token="+localStorage.token;
		loading_start();
		bgPage.send("/members/destroy", params, function (data) {
			localStorage.token = "";
			menu('hide');
			bgPage.init_badge();
			loading_end();
			update('infos');
		});
	}
	
	/**
	 * Afficher ou cacher le menu
	 */
	function menu(status) {
		if (status == "show") {
			document.getElementById('a-episodes').style.display = "inline";
			document.getElementById('a-infos').style.display = "inline";
		}
		if (status == "hide") {
			document.getElementById('a-episodes').style.display = "none";
			document.getElementById('a-infos').style.display = "none";
		}
	}
	
	
	$('#logoLink').click(function(){openTab('http://betaseries.com', true); return false;});
	$('#versionLink').click(function(){openTab('https://chrome.google.com/webstore/detail/dadaekemlgdonlfgmfmjnpbgdplffpda', true); return false;});
	$('#menuEpisodes').click(function(){update('episodes'); return false;});
	$('#menuInfos').click(function(){update('infos'); return false;});
	
	/**
	 * Afficher le message de confirmation
	 */
	function message(content) {
		document.getElementById('message').innerHTML = content;
		setTimeout(function(){
			document.getElementById('message').innerHTML = "";		
		}, 1000*5);	
	}
	
	/**
	 * Animations de chargement
	 */
	function loading_start() {$('#loader').show()}
	function loading_end() {$('#loader').hide()}
	
	
	/*
	 * INIT
	 */
	if (bgPage.connected()) {
		update('episodes');
	}
	else {
		update('infos');
		menu('hide');
		//logout();
	}
	
});